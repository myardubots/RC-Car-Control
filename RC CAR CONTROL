const int LF = 3;
const int LB = 4;

const int RF = 5;
const int RB = 6;

const int ch_1_PIN = 9;// connect channel 1 pin to pin no.9
const int ch_2_PIN = 8;// connect channel 2 pin to pin no. 8


const int stop_near_centre = 150; //stops car when knob of the transmitter is near the centre 



void setup() {
  pinMode(ch_1_PIN, INPUT);
  pinMode(ch_2_PIN, INPUT);
  
  pinMode(LF , OUTPUT); //SETUP PINS OF RELAY 
  pinMode(LB , OUTPUT);
  pinMode(RF , OUTPUT);
  pinMode(RB , OUTPUT);
  
  Serial.begin(9600);
}

void loop() {
  
    int CH1 = pulseIn(ch_1_PIN,HIGH,25000);
    int CH2 = pulseIn(ch_2_PIN,HIGH,25000);

    int x = convert_PWM(CH1);
    int y = convert_PWM(CH2);

  
 
  if(x == 0 && y == 0){
  digitalWrite(LF , LOW);
  digitalWrite(LB , LOW);
  digitalWrite(RF , LOW);
  digitalWrite(RB , LOW);
  }
  
  else if(x > 0 && y == 0){ //forward
  digitalWrite(LF, HIGH );
  digitalWrite(LB,LOW);
  digitalWrite(RF, HIGH );
  digitalWrite(RB,LOW);
  }
  
  else if(x < 0 && y == 0){//back
  digitalWrite(RB, HIGH );
  digitalWrite(RF, LOW);
  digitalWrite(LB, HIGH );
  digitalWrite(LF, LOW);
     
  }else if(x == 0 && y< 0 ){//left
  digitalWrite(RF, HIGH );
  digitalWrite(RB, LOW);
  digitalWrite(LB, HIGH );
  digitalWrite(LF, LOW);
  
  }else if(x == 0 && y >0){//right
  digitalWrite(LF, HIGH );
  digitalWrite(LB, LOW );
  digitalWrite(RB, HIGH );
  digitalWrite(RF, LOW);
  
  }else if( x > 0 && y < 0){//left forward
  digitalWrite(RF, HIGH );
  digitalWrite(RB, LOW);
  digitalWrite(LB, LOW );
  digitalWrite(LF, LOW); 
   
  }else if( x > 0 && y >0 ){//right forward
  digitalWrite(LF, HIGH );
  digitalWrite(LB, LOW );
  digitalWrite(RB, LOW );
  digitalWrite(RF, LOW);
   
  }else if (x < 0 && y < 0){//left back
  digitalWrite(RF, LOW );
  digitalWrite(RB, LOW);
  digitalWrite(LB, HIGH );
  digitalWrite(LF, LOW);
    
   }else if (x < 0 && y > 0 ){// right back
  digitalWrite(LF, LOW );
  digitalWrite(LB, LOW );
  digitalWrite(RB, HIGH );
  digitalWrite(RF, LOW);
    
  }else{
  digitalWrite(LF , LOW);
  digitalWrite(LB , LOW);
  digitalWrite(RF , LOW);
  digitalWrite(RB , LOW);
    }

  
  
  delay(10);
}


int convert_PWM(int pulse){

  /*
   * here we map and constrain the values received from the transmitter
   * convert these values into PWM signals FROM -255 to 255 so that we can use 
   * these values to control speed in case we are using motor driver.
   */
   if (pulse > 1000){
    pulse = map(pulse,1000,2000,-500,500);//we map the lower values of 1000 to -500 and 2000 to 500
    pulse = constrain(pulse,-255,255);//constrain the values in -255 to 255 
    }
    else{
      pulse = 0 ;
      }

      /*
       * when knob are nearby centre of the transmitter we stop the motors  
       * we declared a variable stop_near_centre.
       * 
       */

       if(abs(pulse) <= stop_near_centre){
        pulse = 0;
        }
        
        return pulse;
  }
